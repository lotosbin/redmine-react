{"version":3,"sources":["logo.svg","pages/issues/components/IssueDialog.module.css","auth.js","apollo/client.js","components/Issue.js","components/AgileColumn.js","containers/AgileColumnContainer.js","components/MemberIdFilter.js","containers/MemberIdFilterContainer.js","pages/Agile.js","components/Gantt.js","components/StatusFilter.js","containers/StatusFilterContainer.js","pages/Gantt.js","pages/Issue.js","components/IssueList.js","components/ProjectIdFilter.js","containers/ProjectIdFilterContainer.js","containers/ProjectIdRecentFilterContainer.js","pages/issues/components/IssueDialog.js","pages/issues/containers/GanttContainer.js","containers/MemberIdRecentFilterContainer.js","pages/issues/containers/MemberIdFilterTabContainer.js","pages/issues/containers/ProjectIdFilterTabContainer.js","containers/StatusRecentFilterContainer.js","pages/issues/containers/StatusFilterTabContainer.js","pages/issues/containers/AgileContainer.js","pages/issues/containers/IssueListContainer.js","pages/issues/containers/ViewTabContainer.js","components/KeywordFilter.js","pages/Issues.js","pages/Login.js","pages/Logout.js","components/LinkButton.js","router/PrivateRoute.js","containers/ProjectMemberIdFilterContainer.js","pages/ProjectAgile.js","pages/ProjectGantt.js","pages/ProjectHome.js","pages/Project.js","components/ProjectCardList.js","components/ProjectList.js","pages/Projects.js","App.js","redux/store.js","redux/localStorage.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","app_bar","auth","isAuthenticated","localStorage","getItem","authenticate","api_host","api_key","cb","setItem","setTimeout","signout","removeItem","getAuth","client","ApolloClient","uri","concat","process","headers","_auth$getAuth","X-Redmine-API-Host","X-Redmine-API-Key","TASK_UPDATE","gql","_templateObject","Issue","_this","this","_ref","props","data","_ref$id","id","_ref$subject","subject","_ref$assigned_to_name","assigned_to_name","_ref$start_date","start_date","_ref$due_date","due_date","host","react_default","a","createElement","style","width","display","flexDirection","alignItems","alignContent","target","href","react_apollo_browser_umd","mutation","task_update","_ref2","Button_Button","onClick","e","onClickDelay","amount","unit","_ref3","_ref4","_ref5","_ref6","_ref7","onClickReAdd","parameters","preventDefault","_ref8","_ref8$id","_ref8$start_date","_ref8$due_date","variables","issue_id","moment","add","format","_ref9","_ref9$id","_ref9$start_date","_ref9$due_date","diffHours","diff","issues","length","re_start_date","map","it","reduce","c","Component","AgileColumn","state","checked","status","issue","JSON","parse","dataTransfer","getData","onDrop","setData","stringify","_this2","_this$props","classes","_this$props$data","onClickItem","selectIssueId","className","root","onDragOver","List_default","flex","overflowY","minHeight","_issue$assigned_to","assigned_to","name","assigned_to_mail","mail","project_name","project","ListItem_default","key","role","undefined","dense","button","draggable","onDragStart","listItem","Checkbox_default","tabIndex","disableRipple","ListItemText_default","primary","secondary","index_es","dist_default","email","React","withStyles","theme","height","flexShrink","flexBasis","backgroundColor","palette","background","paper","AgileColumnContainer_templateObject","query","_templateObject2","AgileColumnContainer","item","project_id","assigned_to_id","status_id","console","log","loading","error","filter","filterStatus","components_AgileColumn","MemberIdFilter","value","currentIndex","indexOf","newChecked","Object","toConsumableArray","mode","push","splice","setState","onFilter","_this3","handleToggle","MemberIdFilterContainer","MemberIdFilterContainer_templateObject","users","components_MemberIdFilter","bind","maxWidth","Transition","Slide","assign","direction","Agile","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClose","user","match","containers_MemberIdFilterContainer","minWidth","overflowX","Agile_templateObject","issue_statuses","justifyContent","containers_AgileColumnContainer","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar_AppBar","appBar","Toolbar_Toolbar","IconButton","color","aria-label","SvgIcon_default","components_Issue","position","columns","type","label","Gantt","rows","onSelect","that","assertThisInitialized","chartEvents","eventName","callback","options","selection","chartWrapper","getChart","getSelection","row","_","find","dataToRows","nextProps","nextContext","arguments","exist","need","i","max_date","maxBy","toDate","Date","toString","forEach","relations","issue_to_id","join","mapToRow","orderBy","index_esm","ref","chartType","legendToggle","StatusFilter","StatusFilterContainer_templateObject","StatusFilterContainer","components_StatusFilter","containers_StatusFilterContainer","onStatusFilter","Gantt_templateObject","statusFilterId","objectSpread","components_Gantt","forceUpdate","Issue_templateObject","params","card_container","flexWrap","component","selected","Chip_default","ProjectIdFilter","ProjectIdFilterContainer_templateObject","ProjectIdFilterContainer","components_ProjectIdFilter","projects","recent_project","connect","dispatch","payload","ProjectIdRecentFilterContainer","recentProject","recent_project_list","IssueDialog","styles","Close_default","GanttContainer_templateObject","GanttContainer","statusId","memberId","projectId","MemberIdRecentFilterContainer","recentMember","list","MemberIdFilterTabContainer","event","onChange","handleChange","fullWidth","icon","icons_index_es","containers_MemberIdRecentFilterContainer","ProjectIdFilterTabContainer","containers_ProjectIdFilterContainer","containers_ProjectIdRecentFilterContainer","StatusRecentFilterContainer","recentStatus","StatusFilterTabContainer","containers_StatusRecentFilterContainer","AgileContainer_templateObject","IssueListContainer","defaultProps","viewSelect","IssueListContainer_templateObject","keyword","components_IssueList","ViewTabContainer","toggle","hidden","IconButton_default","containers_IssueListContainer","AgileContainer","containers_GanttContainer","KeywordFilter","defineProperty","debounce","TextField_default","textField","margin","variant","container","marginLeft","spacing","marginRight","marginTop","menu","Issues","onClose1","hidden1","onKeywordFilter","showIssueDetail","select","selectIssue","dialog","show","onCloseDialog","filter_project","_this$state","containers_ProjectIdFilterTabContainer","onProjectFilter","containers_MemberIdFilterTabContainer","containers_StatusFilterTabContainer","components_KeywordFilter","containers_ViewTabContainer","components_IssueDialog","issueId","Login","handleTap","t","Button_default","input","Logout","LinkButton","_React$Component","apply","inherits","createClass","to","PrivateRoute","rest","objectWithoutProperties","Route","render","Redirect","pathname","from","location","ProjectMemberIdFilterContainer_templateObject","ProjectMemberIdFilterContainer","memberships","ProjectAgile","containers_ProjectMemberIdFilterContainer","ProjectAgile_templateObject","ProjectGantt_templateObject","ProjectGantt","ProjectHome_templateObject","ProjectHome","ProjectHome_templateObject2","Project_templateObject","Project","description","title","LinkButton_LinkButton","size","Link","router_PrivateRoute","path","card","bullet","transform","marginBottom","fontSize","pos","Card_default","CardContent_default","Typography_Typography_default","CardActions_default","Button_Button_default","ListItemSecondaryAction","Projects","Projects_templateObject","components_ProjectCardList","ProjectList","App","HashRouter","AppBar_default","Toolbar_default","Typography_default","exact","flexGrow","menuButton","reducers","combineReducers","action","slice","persistedState","serializedState","err","loadState","enhancer","devToolsEnhancer","store","createStore","subscribe","_unused","saveState","getState","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","app","es","src_App_0","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","response","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e0690d2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_bar\":\"IssueDialog_app_bar__s-93q\"};","const auth = {\n    isAuthenticated: function () {\n        return localStorage.getItem(\"api_host\") && localStorage.getItem(\"api_key\")\n    },\n    authenticate(api_host, api_key, cb) {\n        localStorage.setItem(\"api_host\", api_host);\n        localStorage.setItem(\"api_key\", api_key);\n        setTimeout(cb, 100); // fake async\n    },\n    signout(cb) {\n        localStorage.removeItem(\"api_host\");\n        localStorage.removeItem(\"api_key\");\n        setTimeout(cb, 100);\n    },\n    getAuth: function () {\n        return {\n            api_host: localStorage.getItem(\"api_host\"),\n            api_key: localStorage.getItem(\"api_key\")\n        }\n    }\n};\nexport default auth;","import ApolloClient from \"apollo-boost\";\nimport auth from \"../auth\";\n\nconst headers = () => {\n    const {api_host, api_key} = auth.getAuth();\n    return {\n        \"X-Redmine-API-Host\": api_host,\n        \"X-Redmine-API-Key\": api_key,\n    };\n};\nconst client = new ApolloClient({\n    uri: `${process.env.REACT_APP_API_URL}`,\n    // tslint:disable-next-line:object-literal-sort-keys\n    headers: headers(),\n});\nexport default client;\n","/* tslint:disable:variable-name object-literal-sort-keys */\nimport Button from \"@material-ui/core/es/Button/Button\";\nimport gql from \"graphql-tag\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport React, {Component} from \"react\";\nimport {Mutation} from \"react-apollo\";\nimport auth from \"../auth\";\n\nconst TASK_UPDATE = gql`\n    mutation TaskUpdate($issue_id: String!,$start_date:String!,$due_date:String!) {\n        task_update(issue_id: $issue_id,start_date:$start_date,due_date:$due_date) {\n            id\n            subject\n            start_date\n            due_date\n        }\n    }\n`;\n\ninterface IIssue {\n    start_date?: string;\n    due_date?: string;\n}\n\ninterface IIssueProps {\n    data: any;\n    issues?: IIssue[];\n}\n\nclass Issue extends Component<IIssueProps> {\n    static propTypes: { data: PropTypes.Validator<object>; };\n\n    render() {\n        const {id = \"\", subject = \"\", assigned_to_name = \"\", start_date = \"\", due_date = \"\"} = this.props.data || {};\n        const {api_host: host} = auth.getAuth();\n        return (\n            <div style={{width: 200, display: \"flex\", flexDirection: \"column\", alignItems: \"start\", alignContent: \"start\"}}>\n                <div> id:{id}</div>\n                <div>{subject}</div>\n                <div>{assigned_to_name}</div>\n                <div>{start_date}</div>\n                <div>{due_date}</div>\n                <a target=\"_blank\" href={`${host}/issues/${id}`}>Open External</a>\n                <Mutation mutation={TASK_UPDATE}>\n                    {(task_update, {data}) => (\n                        <Button onClick={\n                            (e) => {\n                                this.onClickDelay({e, task_update, amount: 1, unit: \"d\"});\n                            }}>delay 1 day</Button>\n\n                    )}\n                </Mutation>\n                <Mutation mutation={TASK_UPDATE}>\n                    {(task_update, {data}) => (\n                        <Button onClick={\n                            (e) => {\n                                this.onClickDelay({e, task_update, amount: 2, unit: \"d\"});\n                            }}>delay 2 day</Button>\n\n                    )}\n                </Mutation>\n                <Mutation mutation={TASK_UPDATE}>\n                    {(task_update, {data}) => (\n                        <Button onClick={\n                            (e) => {\n                                this.onClickDelay({e, task_update, amount: 3, unit: \"d\"});\n                            }}>delay 3 day</Button>\n\n                    )}\n                </Mutation>\n                <Mutation mutation={TASK_UPDATE}>\n                    {(task_update, {data}) => (\n                        <Button onClick={\n                            (e) => {\n                                this.onClickDelay({e, task_update, amount: 4, unit: \"d\"});\n                            }}>delay 4 day</Button>\n\n                    )}\n                </Mutation>\n                <Mutation mutation={TASK_UPDATE}>\n                    {(task_update, {data}) => (\n                        <Button onClick={\n                            (e) => {\n                                this.onClickDelay({e, task_update, amount: 5, unit: \"d\"});\n                            }}>delay 5 day</Button>\n\n                    )}\n                </Mutation>\n                <Mutation mutation={TASK_UPDATE}>\n                    {(task_update, {data}) => (\n                        <Button onClick={\n                            (e) => {\n                                this.onClickReAdd(e, task_update);\n                            }}>ReAdd</Button>\n\n                    )}\n                </Mutation>\n            </div>\n        );\n    }\n\n    onClickDelay(parameters: { e: any, task_update: any, amount: any, unit: any }) {\n        const {e, task_update, amount, unit} = parameters;\n        e.preventDefault();\n        const {id = \"\", start_date = \"\", due_date = \"\"} = this.props.data || {};\n        const new_start_date = moment(start_date).add(amount, unit).format(\"YYYY-MM-DD\");\n        const new_due_date = moment(due_date).add(amount, unit).format(\"YYYY-MM-DD\");\n        const variables = {\n            issue_id: id,\n            start_date: new_start_date,\n            due_date: new_due_date,\n        };\n        task_update({variables});\n    }\n\n    onClickReAdd(e: any, task_update: any) {\n        const {id = \"\", start_date = \"\", due_date = \"\"} = this.props.data || {};\n        const diffHours = moment(due_date).diff(moment(start_date), \"h\");\n        const issues = (this.props.issues || []);\n        if (issues.length > 0) {\n            const re_start_date: string = issues.map((it: any) => it.start_date).reduce((p, c) => p != null && p > c ? p : c, null);\n            const variables = {\n                issue_id: id,\n                start_date: moment(re_start_date).format(\"YYYY-MM-DD\"),\n                due_date: moment(re_start_date).add(diffHours, \"h\").format(\"YYYY-MM-DD\"),\n            };\n            task_update({variables});\n        }\n    }\n}\n\nexport default Issue;\n","/* tslint:disable:variable-name */\nimport {ListItemAvatar} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport Gravatar from \"react-gravatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles: any = (theme: any) => ({\n    root: {\n        height: \"100%\",\n        width: 300,\n        // tslint:disable-next-line:object-literal-sort-keys\n        flex: 0,\n        flexShrink: 0,\n        flexBasis: 300,\n        backgroundColor: theme.palette.background.paper,\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    // tslint:disable-next-line:object-literal-sort-keys\n    listItem: {},\n});\n\ninterface IAgileColumn {\n    classes: any;\n    data: any[];\n    project_id?: string;\n    onClickItem: any;\n    onDrop: any;\n    status: any;\n}\n\nclass AgileColumn extends React.Component<IAgileColumn> {\n    state = {\n        checked: [],\n    };\n\n\n    onDragOver(parameters: { e: any }) {\n        const e = parameters.e;\n        e.preventDefault();\n    }\n\n    onDrop(parameters: { e: any, status: any }) {\n        const {e, status} = parameters;\n        const issue = JSON.parse(e.dataTransfer.getData(\"issue\"));\n        if (this.props.onDrop) {\n            this.props.onDrop(issue, status);\n        }\n    }\n\n    onDragStart(parameters: { e: any, data: any }) {\n        const {e, data} = parameters;\n        e.dataTransfer.setData(\"issue\", JSON.stringify(data));\n    }\n\n    render() {\n        const {classes, data = [], status, onClickItem, selectIssueId} = this.props;\n        return (\n            <div className={classes.root}\n                 onDragOver={(e) => this.onDragOver({e})}\n                 onDrop={(e) => this.onDrop({e, status})}>\n\n                <List style={{flex: 1, overflowY: \"scroll\", minHeight: \"300px\"}}>\n                    {data.map((issue: any) => {\n                        const {id, subject, assigned_to: {name: assigned_to_name, mail: assigned_to_mail}, project: {name: project_name}} = issue;\n                        return (\n                            <ListItem\n                                key={id}\n                                role={undefined}\n                                dense\n                                button\n                                draggable\n                                onDragStart={(e) => this.onDragStart({e, data: issue})}\n                                className={classes.listItem}\n                                onClick={(e) => onClickItem(issue)}\n                            >\n                                <Checkbox\n                                    checked={id == selectIssueId}\n                                    tabIndex={-1}\n                                    disableRipple\n                                />\n                                <ListItemText primary={`${subject}`} secondary={`${assigned_to_name}`}>\n                                    <h1>{project_name}</h1>\n                                    <p>{id}:{subject}</p>\n                                </ListItemText>\n                                <ListItemAvatar>\n                                    <Gravatar email={assigned_to_mail}/>\n                                </ListItemAvatar>\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AgileColumn);\n","/* tslint:disable:variable-name no-console */\nimport {withStyles} from \"@material-ui/core/styles\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport {Mutation, Query} from \"react-apollo\";\nimport AgileColumn from \"../components/AgileColumn\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        height: \"100%\",\n        width: 300,\n        // tslint:disable-next-line:object-literal-sort-keys\n        flex: 0,\n        flexShrink: 0,\n        flexBasis: 300,\n        backgroundColor: theme.palette.background.paper,\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: 0,\n    },\n    // tslint:disable-next-line:object-literal-sort-keys\n    listItem: {},\n});\nconst TASK_UPDATE = gql`\n    mutation TaskUpdate($issue_id: String!,$status_id:String!) {\n        task_update(issue_id: $issue_id,status_id:$status_id) {\n            id\n        }\n    }\n`;\nconst query = gql`query Agile($assigned_to_id:String,$project_id:String) {\n    issues(project_id:$project_id,assigned_to_id:$assigned_to_id,limit:500){\n        id\n        assigned_to_name\n        assigned_to{\n            id\n            name:login\n            mail\n        }\n        subject\n        start_date\n        due_date\n        relations{\n            relation_type\n            issue_to_id\n        }\n        status{\n            id\n        }\n        project{\n            id\n            name\n        }\n    }\n}\n`;\n\nclass AgileColumnContainer extends React.Component<any> {\n    state = {\n        checked: [],\n    };\n\n    onClickItem(e: any, item: any) {\n        if (this.props.onClickItem) {\n            this.props.onClickItem(item);\n        }\n    }\n\n    render() {\n        const {project_id, classes, status, assigned_to_id, onClickItem, selectIssueId} = this.props;\n        let {status_id} = this.props;\n        console.log(`AgileColumn:assigned_to_id=${assigned_to_id}`);\n        if (status) {\n            status_id = status.id\n        }\n        return (\n            <div className={classes.root}>\n                <h1 style={{width: 300}} key={status_id}>{status.name}</h1>\n                <div style={{minHeight: 0, overflowY: \"scroll\"}}>\n                    <Query query={query} variables={{project_id, assigned_to_id}}>\n                        {({loading, error, data}) => {\n                            if (loading) {\n                                return <p>Loading...</p>;\n                            }\n                            if (error) {\n                                return <p>Error :(</p>;\n                            }\n                            const issues: any[] = data.issues || [];\n                            const filter: any[] = issues.filter((it: any) => this.filterStatus(status_id)(it));\n                            return <Mutation mutation={TASK_UPDATE}>\n                                {(task_update, {data}) => (\n                                    <AgileColumn\n                                        selectIssueId={selectIssueId}\n                                        status={status}\n                                        data={filter}\n                                        onClickItem={onClickItem}\n                                        onDrop={(issue: { id: any; }, status: { id: any; }) => {\n                                            console.log(`onDrop:${JSON.stringify(issue)},${JSON.stringify(status)}`);\n                                            const variables = {\n                                                issue_id: issue.id,\n                                                status_id: status.id,\n                                            };\n                                            task_update({variables});\n                                        }}\n                                    />\n                                )}\n                            </Mutation>;\n                        }}\n                    </Query>\n                </div>\n            </div>\n        );\n    }\n\n    filterStatus(status_id?: string) {\n        return status_id ? (it) => (it.status || {}).id === status_id : true;\n    }\n}\n\nexport default withStyles(styles)(AgileColumnContainer);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Gravatar from \"react-gravatar\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        overflowY: \"scroll\",\n        width: 250,\n    },\n    listItem: {},\n});\n\nclass MemberIdFilter extends React.Component {\n    state = {\n        checked: [],\n    };\n\n    handleToggle(value: { id: any; }) {\n        return () => {\n            const {id} = value;\n            const {checked}: { checked: any[] } = this.state;\n            const currentIndex = checked.indexOf(id);\n            let newChecked = [...checked];\n            if (currentIndex === -1) {\n                if (this.props.mode === \"single\") {\n                    newChecked = [];\n                }\n                newChecked.push(id);\n            } else {\n                newChecked.splice(currentIndex, 1);\n            }\n            this.setState({\n                checked: newChecked,\n            });\n            if (this.props.onFilter) {\n                const filter = this.props.data.filter((it: { id: any; }) => newChecked.indexOf(it.id) >= 0);\n                this.props.onFilter(filter);\n            }\n        };\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <List>\n                    {this.props.data.map((item: IMember) => {\n                        const {id, name, mail} = item;\n                        return (\n                            <ListItem\n                                key={id}\n                                role={undefined}\n                                dense\n                                button\n                                onClick={this.handleToggle(item)}\n                                className={classes.listItem}\n                            >\n                                <Gravatar email={mail}/>\n                                <Checkbox\n                                    checked={(this.state.checked).indexOf(id) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                />\n                                <ListItemText primary={`${name}`}/>\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(MemberIdFilter);\n","import {withStyles} from \"@material-ui/core/styles\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport {Query} from \"react-apollo\";\nimport MemberIdFilter from \"../components/MemberIdFilter\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        width: \"100%\",\n        maxWidth: 200,\n        backgroundColor: theme.palette.background.paper,\n        overflowY: \"scroll\",\n    },\n    listItem: {},\n});\n\nclass MemberIdFilterContainer extends React.Component<any> {\n\n    render() {\n\n        return (\n            <div style={{display: \"flex\", flex: \"0 0 250px\", overflowY: \"scroll\", minHeight: 0}}>\n                <Query query={gql`\n          query Status {\n            users (limit:1000){\n              id\n              name:firstname\n              mail\n            }\n          }\n        `}\n                >\n                    {({loading, error, data}) => {\n                        if (loading) {\n                            return <p>Loading...</p>;\n                        }\n                        if (error) {\n                            return <p>Error :(</p>;\n                        }\n                        const {users} = data;\n                        return (\n                            <MemberIdFilter mode={\"single\"} data={users || []} onFilter={this.props.onFilter.bind(this)}/>\n                        );\n                    }}\n                </Query>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(MemberIdFilterContainer);\n","import {withStyles} from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport AppBar from \"../../node_modules/@material-ui/core/es/AppBar/AppBar\";\nimport Dialog from \"../../node_modules/@material-ui/core/es/Dialog/Dialog\";\nimport IconButton from \"../../node_modules/@material-ui/core/es/IconButton/IconButton\";\nimport Slide from \"../../node_modules/@material-ui/core/es/Slide/Slide\";\nimport Toolbar from \"../../node_modules/@material-ui/core/es/Toolbar/Toolbar\";\nimport CloseIcon from \"../../node_modules/@material-ui/core/SvgIcon/SvgIcon\";\nimport Issue from \"../components/Issue\";\nimport AgileColumnContainer from \"../containers/AgileColumnContainer\";\nimport MemberIdFilterContainer from \"../containers/MemberIdFilterContainer\";\n\nconst styles: any = {\n    appBar: {\n        position: \"relative\",\n    },\n    flex: {\n        flex: 1,\n    },\n};\n\nfunction Transition(props: any) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass Agile extends Component<any, any> {\n\n    constructor(props: Readonly<any>) {\n        super(props);\n        this.state = {\n            filter: null,\n            issue: null,\n        };\n    }\n\n    handleClose = () => {\n        this.setState({issue: null});\n    }\n\n    onFilter(user: Array<{ id: any; }>) {\n        console.log(`onFilter:${JSON.stringify(user)}`);\n        if (user && user.length) {\n            this.setState({filter: user[0].id});\n        } else {\n            this.setState({filter: null});\n        }\n    }\n\n    render() {\n        const {match, classes} = this.props;\n        return (\n            <div style={{flex: 1, width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"row\"}}>\n                <div style={{width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"row\"}}>\n                    <MemberIdFilterContainer onFilter={(item: Array<{ id: any; }>) => this.onFilter(item)}/>\n                    <div style={{flex: 1, minWidth: 0}}>\n                        <div style={{width: \"100%\", height: \"100%\", overflowX: \"scroll\"}}>\n                            <Query query={gql`\n          query Status {\n            issue_statuses {\n              id\n              name\n            }\n          }\n        `}\n                            >\n                                {({loading, error, data}) => {\n                                    if (loading) {\n                                        return <p>Loading...</p>;\n                                    }\n                                    if (error) {\n                                        return <p>Error :(</p>;\n                                    }\n                                    const {issue_statuses} = data;\n                                    return (\n                                        <div style={{width: \"100%\", height: \"100%\"}}>\n                                            <div style={{width: \"100%\", height: \"100%\", overflowY: \"scroll\", display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                                                {issue_statuses.map((it: { id: any; }) => <AgileColumnContainer\n                                                    assigned_to_id={this.state.filter}\n                                                    status={it}\n                                                    key={it.id} data={[]}\n                                                    onClickItem={(item: any) => this.setState({issue: item})}\n                                                />)}\n                                            </div>\n                                        </div>\n                                    );\n                                }}\n                            </Query>\n                        </div>\n                    </div>\n                </div>\n                <Dialog\n                    fullScreen\n                    open={!!this.state.issue}\n                    onClose={this.handleClose}\n                    TransitionComponent={Transition}\n                >\n                    <AppBar className={classes.appBar}>\n                        <Toolbar>\n                            <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                                <CloseIcon/>\n                            </IconButton>\n                        </Toolbar>\n                    </AppBar>\n                    <Issue data={this.state.issue}/>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Agile);\n","// @flow\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport React, {Component} from \"react\";\nimport Chart from \"react-google-charts\";\n\nfunction daysToMilliseconds(days: any) {\n    return days * 24 * 60 * 60 * 1000;\n}\n\nconst columns = [\n    {type: \"string\", label: \"Task ID\"},\n    {type: \"string\", label: \"Task Name\"},\n    {type: \"string\", label: \"Resource\"},\n    {type: \"date\", label: \"Start Date\"},\n    {type: \"date\", label: \"End Date\"},\n    {type: \"number\", label: \"Duration\"},\n    {type: \"number\", label: \"Percent Complete\"},\n    {type: \"string\", label: \"Dependencies\"},\n];\nconst mapToRow = (issues: any) => issues.map((it: any) => {\n    const start_date = moment(it.start_date).toDate() || new Date(2015, 0, 1);\n    const due_date = moment(it.due_date).toDate() || moment(start_date).add(1, \"d\").toDate();\n    const issue_id = it.id;\n    const relation = it.relations && it.relations.length ? (it.relations || []).filter((it: any) => it.issue_to_id !== issue_id).map((it: any) => it.issue_to_id).join(\",\") : null;\n    return [\n        `${it.id}`,\n        it.subject,\n        it.assigned_to_name,\n        start_date,\n        due_date,\n        null,\n        100,\n        null,\n    ];\n});\n\nexport interface IGanttIssue {\n    due_date?: string;\n    start_date?: string;\n    id: string;\n}\n\ntype P = { data: any, onSelect: (issue: IGanttIssue) => any }\n\ntype S = {}\n\nclass Gantt extends Component <P, S> {\n    chartEvents: [any];\n    rows: any[] = [];\n\n    constructor(props: any) {\n        super(props);\n        const {onSelect} = this.props;\n        const that = this;\n        this.chartEvents = [\n            {\n                eventName: \"select\",\n                callback(options: any) {\n                    if (onSelect) {\n                        const chartWrapper = options.chartWrapper;\n                        const chart = chartWrapper.getChart();\n                        const selections = chart.getSelection();\n                        const selection = selections[0];\n                        const row = that.rows[selection.row];\n                        const id = row[0];\n\n                        onSelect(_.find(that.props.data, (it) => it.id === id));\n                    }\n                },\n            },\n        ];\n        const rows = this.dataToRows();\n        this.rows = rows;\n        this.state = {data: [columns, ...rows]}\n    }\n\n    componentWillReceiveProps(nextProps: Readonly<P>, nextContext: any): void {\n        const rows = this.dataToRows(nextProps.data);\n        this.rows = rows;\n        this.state = {data: [columns, ...rows]}\n    }\n\n    dataToRows(data = this.props.data) {\n        const issues: IGanttIssue[] = data;\n        const exist = issues.filter((it) => !!it.start_date);\n        const need = issues.filter((it) => !it.start_date);\n        for (let i = 0; i < need.length; i++) {\n            const max = _.maxBy(exist, (it) => moment(it.start_date).toDate());\n            const max_date = (max || {start_date: moment(Date()).toString()}).start_date;\n            const item = need[i];\n            item.start_date = moment(max_date).add(1, \"d\").toString();\n            exist.push(item);\n        }\n        exist.forEach((it) => {\n            if (!it.due_date) {\n                it.due_date = moment(it.start_date).add(5, \"d\").toString();\n            }\n        });\n        const orderBy = _.orderBy(exist, [\"start_date\"]);\n        return mapToRow(orderBy);\n    }\n\n    render() {\n\n        return <Chart\n            ref={\"chart\"}\n            chartType=\"Gantt\"\n            data={this.state.data}\n            width=\"100%\"\n            height=\"100%\"\n            options={{\n                height: 2000,\n            }}\n            chartEvents={this.chartEvents}\n            legendToggle\n        />;\n    }\n}\n\nexport default Gantt;\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        width: 250,\n        backgroundColor: theme.palette.background.paper,\n        overflowY: \"scroll\",\n    },\n    listItem: {},\n});\n\nexport interface IStatus {\n    id: any;\n    name?: any;\n}\n\ninterface IStatusFilterProps {\n    data: IStatus[];\n    mode?: \"single\";\n    onFilter: any;\n    classes?: any;\n}\n\nclass StatusFilter extends React.Component<IStatusFilterProps> {\n    state = {\n        checked: [],\n    };\n\n    handleToggle(value: { id: any; }) {\n        return () => {\n            const {id} = value;\n            const {checked}: { checked: any[] } = this.state;\n            const currentIndex = checked.indexOf(id);\n            let newChecked = [...checked];\n            if (currentIndex === -1) {\n                if (this.props.mode === \"single\") {\n                    newChecked = [];\n                }\n                newChecked.push(id);\n            } else {\n                newChecked.splice(currentIndex, 1);\n            }\n            this.setState({\n                checked: newChecked,\n            });\n            if (this.props.onFilter) {\n                const filter = this.props.data.filter((it: { id: any; }) => newChecked.indexOf(it.id) >= 0);\n                this.props.onFilter(filter);\n            }\n        };\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.root}>\n                <List>\n                    {this.props.data.map((item: IStatus) => {\n                        const {id, name} = item;\n                        return (\n                            <ListItem\n                                key={id}\n                                role={undefined}\n                                dense\n                                button\n                                onClick={this.handleToggle(item)}\n                                className={classes.listItem}\n                            >\n                                <Checkbox\n                                    checked={(this.state.checked ).indexOf(id) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                />\n                                <ListItemText primary={`${name}`}/>\n\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StatusFilter);\n","import {withStyles} from \"@material-ui/core/styles\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport {Query} from \"react-apollo\";\nimport StatusFilter from \"../components/StatusFilter\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        width: \"100%\",\n        maxWidth: 200,\n        backgroundColor: theme.palette.background.paper,\n        overflowY: \"scroll\",\n    },\n    listItem: {},\n});\nconst query: any = gql`\n    query Status {\n        issue_statuses {\n            id\n            name\n        }\n    }\n`;\nclass StatusFilterContainer extends React.Component<any> {\n    render() {\n        return (\n            <div style={{display: \"flex\", flex: \"0 0 250px\", overflowY: \"scroll\", minHeight: 0}}>\n                <Query query={query}>\n                    {({loading, error, data}) => {\n                        if (loading) {\n                            return <p>Loading...</p>;\n                        }\n                        if (error) {\n                            return <p>Error :(</p>;\n                        }\n                        const {issue_statuses} = data;\n                        return (\n                            <StatusFilter mode={\"single\"} data={issue_statuses || []} onFilter={this.props.onFilter.bind(this)}/>\n                        );\n                    }}\n                </Query>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StatusFilterContainer);\n","import gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport GanttComponent from \"../components/Gantt\";\nimport Issue from \"../components/Issue\";\nimport MemberIdFilterContainer from \"../containers/MemberIdFilterContainer\";\nimport StatusFilterContainer from \"../containers/StatusFilterContainer\";\n\nclass Gantt extends Component<any, any> {\n    data: any[];\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            filter: [],\n            status: [],\n            data: [],\n            issue: {},\n        };\n        this.data = [];\n    }\n\n    render() {\n        const {match} = this.props;\n        return (\n            <div style={{flex: 1, display: \"flex\"}}>\n                <div style={{flex: 1, display: \"flex\", flexDirection: \"row\"}}>\n                    <MemberIdFilterContainer onFilter={(item: any) => this.onFilter(item)}/>\n                    <StatusFilterContainer onFilter={(item: any) => this.onStatusFilter(item)}/>\n                    <Query query={gql`query Issues($assigned_to_id:String) {\n    issues(assigned_to_id:$assigned_to_id,limit:500){\n        id\n        assigned_to_name\n        subject\n        start_date\n        due_date\n        relations{\n            relation_type\n            issue_to_id\n        }\n        status{\n            id\n            name\n        }\n    }\n}\n        `}\n                           variables={{assigned_to_id: (this.state.filter || {}).id}}\n                    >\n                        {({loading, error, data}) => {\n                            if (loading) {\n                                return <p>Loading...</p>;\n                            }\n                            if (error) {\n                                return <p>Error :(</p>;\n                            }\n                            const statusFilterId = (this.state.status || {}).id;\n                            const issues = (data.issues || [])\n                                .filter((it: { status: { id: any; }; }) => !statusFilterId || it.status.id === statusFilterId)\n                                .map((it: { subject: any; status: any; }) => ({\n                                    ...it,\n                                    subject: `${it.subject}[${(it.status || {}).name}]`,\n                                }));\n                            this.data = issues;\n                            return <div style={{height: \"100%\", overflowY: \"scroll\", flex: 1}}>\n                                <GanttComponent data={issues} onSelect={(i: any) => this.onSelect(i)}/>\n                            </div>;\n                        }}\n                    </Query>\n                    <Issue data={this.state.issue}/>\n                </div>\n            </div>\n        );\n    }\n\n    onSelect(i: Array<{ row: any }>) {\n        const issue = this.data[i[0].row];\n        this.setState({issue});\n    }\n\n    onFilter(it: any[]) {\n        if (it && it.length > 0) {\n            this.setState({filter: it[0]});\n        } else {\n            this.setState({filter: null});\n        }\n        this.forceUpdate();\n    }\n\n    onStatusFilter(it: any[]) {\n        if (it && it.length > 0) {\n            this.setState({status: it[0]});\n        } else {\n            this.setState({status: null});\n        }\n        this.forceUpdate();\n    }\n}\n\nexport default Gantt;\n","import gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\n\nclass Issue extends Component<any, any> {\n    render() {\n        const {match} = this.props;\n        return (\n            <div>\n                <Query query={gql`\n          query Issue($id: String!) {\n              issues:tasks(issue_id:$id){\n                id\n                assigned_to_name\n                subject\n                start_date\n                due_date\n                relations{\n                    relation_type\n                    issue_to_id\n                }\n              }\n          }\n        `}\n                       variables={{id: match.params.id}}\n                >\n                    {({loading, error, data}) => {\n                        if (loading) {\n                            return <p>Loading...</p>;\n                        }\n                        if (error) {\n                            return <p>Error :(</p>;\n                        }\n                        const issue = data.issues[0];\n                        return <Issue data={issue}/>;\n\n                    }}\n                </Query>\n\n            </div>\n        );\n    }\n}\n\nexport default Issue;\n","import {withStyles} from \"@material-ui/core\";\nimport Chip from \"@material-ui/core/Chip\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles: any = {\n    card_container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflowY: \"scroll\",\n        minHeight: 0,\n        height: \"100%\",\n    },\n};\n\ninterface IIssueListItem {\n    id: any;\n    subject: any;\n    project: any;\n    assigned_to_name: any\n}\n\ninterface IIssueListProps {\n    classes: any;\n    data: any[];\n\n    onClickItem(parameter: IIssueListItem): any;\n}\n\nconst IssueList = (props: IIssueListProps) => {\n    const {classes, data: issues, selectIssueId} = props;\n    return <div className={classes.card_container}>\n        <List component=\"nav\">\n            {issues.length > 0 ? issues.map((issue) => (\n                <ListItem key={issue.id} button onClick={() => props.onClickItem(issue)} selected={true || issue.id == selectIssueId}>\n                    <Checkbox\n                        checked={issue.id == selectIssueId}\n                        tabIndex={-1}\n                        disableRipple\n                    />\n                    <Chip label={issue.project.name}/>\n                    <ListItemText primary={`${issue.id}:${issue.subject}`}/>\n                    <Chip label={issue.assigned_to_name}/>\n                </ListItem>\n            )) : <div>No Data</div>}\n        </List>\n    </div>;\n};\nexport default withStyles(styles)(IssueList);\n","import Checkbox from \"@material-ui/core/Checkbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        overflowY: \"scroll\",\n        width: 250,\n    },\n    listItem: {},\n});\n\nexport interface IProject {\n    id: string;\n    name?: string;\n}\n\ninterface IProjectIdFilterProps {\n    data: IProject[];\n    onFilter: any;\n    classes?: any;\n    mode?: \"single\" | undefined | null;\n}\n\nclass ProjectIdFilter extends React.Component<IProjectIdFilterProps> {\n    state = {\n        checked: [],\n    };\n\n    handleToggle(value: { id: any; }) {\n        return () => {\n            const {id} = value;\n            const {checked}: { checked: any[] } = this.state;\n            const currentIndex = checked.indexOf(id);\n            let newChecked = [...checked];\n            if (currentIndex === -1) {\n                if (this.props.mode === \"single\") {\n                    newChecked = [];\n                }\n                newChecked.push(id);\n            } else {\n                newChecked.splice(currentIndex, 1);\n            }\n            this.setState({\n                checked: newChecked,\n            });\n            if (this.props.onFilter) {\n                const filter = this.props.data.filter((it: { id: any; }) => newChecked.indexOf(it.id) >= 0);\n                this.props.onFilter(filter);\n            }\n        };\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n                <List>\n                    {this.props.data.map((project) => {\n                        return <ListItem key={project.id} role={undefined} dense button onClick={this.handleToggle({id: project.id})} className={classes.listItem}>\n                            <Checkbox checked={(this.state.checked ).indexOf(project.id) !== -1} tabIndex={-1} disableRipple/>\n                            <ListItemText primary={`${project.name}`}/>\n\n                        </ListItem>;\n                    })}\n                </List>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProjectIdFilter);\n","import {withStyles} from \"@material-ui/core/styles\";\nimport gql from \"graphql-tag\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {Query} from \"react-apollo\";\nimport {connect} from \"react-redux\";\nimport MemberIdFilter from \"../components/MemberIdFilter\";\nimport ProjectIdFilter from \"../components/ProjectIdFilter\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        width: \"100%\",\n        height: \"80%\",\n        maxWidth: 200,\n        backgroundColor: theme.palette.background.paper,\n        overflowY: \"scroll\",\n    },\n    listItem: {},\n});\nconst query: any = gql`query Status {\n    projects (limit:1000){\n        id\n        name:name\n    }\n} `;\n\nclass ProjectIdFilterContainer extends React.Component<any> {\n    render() {\n        return <div style={{display: \"flex\", flex: \"0 0 250px\", overflowY: \"scroll\", minHeight: 0}}>\n            <Query query={query}>\n                {({loading, error, data}) => {\n                    if (loading) {\n                        return <p>Loading...</p>;\n                    }\n                    if (error) {\n                        return <p>Error :(</p>;\n                    }\n                    return <ProjectIdFilter mode={\"single\"} data={data.projects || []} onFilter={(item: any) => this.onFilter(item)}/>;\n                }}\n            </Query>\n        </div>;\n    }\n\n    onFilter(item: any): any {\n        console.log(\"dispath\");\n        this.props.recent_project(item[0]);\n        this.props.onFilter(item);\n    }\n}\n\nconst mapStateToProps = (state: any) => ({});\nconst mapDispatchToProps = (dispatch: any) => ({\n    recent_project(project: any) {\n        dispatch({type: \"RECENT_PROJECT\", payload: project});\n    },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProjectIdFilterContainer));\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport ProjectIdFilter from \"../components/ProjectIdFilter\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        width: \"100%\",\n        height: \"20%\",\n        maxWidth: 200,\n        backgroundColor: theme.palette.background.paper,\n        overflowY: \"scroll\",\n    },\n    listItem: {},\n});\n\nclass ProjectIdRecentFilterContainer extends React.Component<any> {\n    render() {\n        return <div style={{display: \"flex\", flex: \"0 0 250px\", overflowY: \"scroll\", minHeight: 0}}>\n            <ProjectIdFilter mode={\"single\"} data={this.props.projects} onFilter={(item: any) => this.onFilter(item)}/>\n        </div>;\n    }\n\n    onFilter(item: any): any {\n        this.props.recent_project(item[0]);\n        this.props.onFilter(item);\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    projects: state.recentProject.recent_project_list,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    recent_project(project: any) {\n        dispatch({type: \"RECENT_PROJECT\", payload: project});\n    },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProjectIdRecentFilterContainer));\n","import {AppBar, IconButton} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/es/Dialog/Dialog\";\nimport Slide from \"@material-ui/core/es/Slide/Slide\";\nimport Toolbar from \"@material-ui/core/es/Toolbar/Toolbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport styles from \"./IssueDialog.module.css\";\nimport React, {Component} from \"react\";\nimport Issue from \"../../../components/Issue\";\n\nfunction Transition(props: any) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass IssueDialog extends Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            issue: props.data,\n        };\n    }\n\n    componentWillReceiveProps(nextProps: Readonly<any>, nextContext: any): void {\n        this.setState({issue: nextProps.data});\n    }\n\n    handleClose = () => {\n        let {onClose} = this.props;\n        this.setState({issue: null});\n        onClose && onClose();\n    };\n\n    show(issue: any) {\n        this.setState({issue});\n    }\n\n    render() {\n        return (\n            <Dialog fullScreen open={!!this.state.issue} onClose={this.handleClose} TransitionComponent={Transition}>\n                <AppBar className={styles.app_bar}>\n                    <Toolbar>\n                        <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                            <CloseIcon/>\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Issue data={this.state.issue}/>\n            </Dialog>\n        );\n    }\n}\n\nexport default IssueDialog;\n","// @flow weak\nimport gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport Gantt, {IGanttIssue} from \"../../../components/Gantt\";\n\ntype P = {\n    projectId?: string,\n    memberId?: string,\n    statusId?: string,\n};\ntype S = {\n    issue?: any\n}\n\nconst query = gql`query IssuesGantt($id: String,$assigned_to_id:String) {\n    projects(id:$id,limit:1000) {\n        id\n        name\n        description\n        issues(assigned_to_id:$assigned_to_id){\n            id\n            assigned_to_name\n            subject\n            start_date\n            due_date\n            relations{\n                relation_type\n                issue_to_id\n            }\n            status{\n                id\n            }\n        }\n    }\n}`;\n\nclass GanttContainer extends Component<P, S> {\n    render() {\n        const {statusId, memberId, projectId, onClickItem} = this.props;\n        return (\n            <Query query={query} variables={{id: projectId, assigned_to_id: memberId}}>\n                {({loading, error, data}) => {\n                    if (loading) {\n                        return <p>Loading...</p>;\n                    }\n                    if (error) {\n                        return <p>Error :(</p>;\n                    }\n                    let issues = data.projects[0].issues;\n                    if (statusId) {\n                        issues = issues.filter((it) => it.status && statusId === it.status.id);\n                    }\n                    return <Gantt data={issues} onSelect={(i: IGanttIssue) => onClickItem(i)}/>;\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default GanttContainer;\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport MemberIdFilter from \"../components/MemberIdFilter\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        width: \"100%\",\n        maxWidth: 200,\n        backgroundColor: theme.palette.background.paper,\n        overflowY: \"scroll\",\n    },\n    listItem: {},\n});\n\nclass MemberIdRecentFilterContainer extends React.Component<any> {\n    render() {\n        return <div style={{display: \"flex\", flex: \"0 0 250px\", overflowY: \"scroll\", minHeight: 0}}>\n            <MemberIdFilter mode={\"single\"} data={this.props.data} onFilter={this.props.onFilter.bind(this)}/>\n        </div>;\n    }\n}\n\nexport default connect((state: any) => ({data: state.recentMember.list}))(withStyles(styles)(MemberIdRecentFilterContainer));\n","import {Tab, Tabs} from \"@material-ui/core\";\nimport {AccessTime, List} from \"@material-ui/icons\";\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport MemberIdFilterContainer from \"../../../containers/MemberIdFilterContainer\";\nimport MemberIdRecentFilterContainer from \"../../../containers/MemberIdRecentFilterContainer\";\nimport {IMember} from \"../../../components/MemberIdFilter\";\n\nclass MemberIdFilterTabContainer extends Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            value: 1,\n        };\n    }\n\n    handleChange(event: any, value: any) {\n        this.setState({value});\n    }\n\n    render() {\n        const {value} = this.state;\n        return (\n            <div style={{display: \"flex\", flex: \"0 0 250px\", flexDirection: \"column\"}}>\n                <div style={{width: \"250px\"}}>\n                    <Tabs value={value} onChange={this.handleChange.bind(this)} fullWidth>\n                        <Tab icon={<List/>}/>\n                        <Tab icon={<AccessTime/>}/>\n                    </Tabs>\n                </div>\n                <div style={{display: \"flex\", flex: \"1 0 250px\", overflowY: \"scroll\"}}>\n                    {value === 0 && <MemberIdFilterContainer onFilter={(item: IMember[]) => this.onFilter(item)}/>}\n                    {value === 1 && <MemberIdRecentFilterContainer onFilter={(item: IMember[]) => this.onFilter(item)}/>}\n                </div>\n            </div>\n        );\n    }\n\n    onFilter(item: IMember[]) {\n        this.props.recentMember(item[0]);\n        return this.props.onFilter(item);\n    }\n}\n\nconst mapStateToProps = (state: any) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    recentMember(item: IMember) {\n        dispatch({type: \"RECENT_MEMBER\", payload: item});\n    },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(MemberIdFilterTabContainer);\n","import {Tab, Tabs} from \"@material-ui/core\";\nimport {AccessTime, List} from \"@material-ui/icons\";\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {IProject} from \"../../../components/ProjectIdFilter\";\nimport ProjectIdFilterContainer from \"../../../containers/ProjectIdFilterContainer\";\nimport ProjectIdRecentFilterContainer from \"../../../containers/ProjectIdRecentFilterContainer\";\n\nclass ProjectIdFilterTabContainer extends Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            value: 1,\n        };\n    }\n\n    handleChange(event: any, value: any) {\n        this.setState({value});\n    }\n\n    render() {\n        const {value} = this.state;\n        return (\n            <div style={{display: \"flex\", flex: \"0 0 250px\", flexDirection: \"column\"}}>\n                <div style={{width: \"250px\"}}>\n                    <Tabs value={value} onChange={this.handleChange.bind(this)} fullWidth>\n                        <Tab icon={<List/>}/>\n                        <Tab icon={<AccessTime/>}/>\n                    </Tabs>\n                </div>\n                <div style={{display: \"flex\", flex: \"1 0 250px\", overflowY: \"scroll\"}}>\n                    {value === 0 && <ProjectIdFilterContainer onFilter={(item: IProject[]) => this.onFilter(item)}/>}\n                    {value === 1 && <ProjectIdRecentFilterContainer onFilter={(item: IProject[]) => this.onFilter(item)}/>}\n                </div>\n            </div>\n        );\n    }\n\n    onFilter(item: IProject[]) {\n        this.props.recentMember(item[0]);\n        return this.props.onFilter(item);\n    }\n}\n\nconst mapStateToProps = (state: any) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    recentMember(item: IProject) {\n        dispatch({type: \"RECENT_PROJECT\", payload: item});\n    },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectIdFilterTabContainer);\n","import {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport StatusFilter from \"../components/StatusFilter\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        width: \"100%\",\n        maxWidth: 200,\n        backgroundColor: theme.palette.background.paper,\n        overflowY: \"scroll\",\n    },\n    listItem: {},\n});\n\nclass StatusRecentFilterContainer extends React.Component<any> {\n    render() {\n        return (\n            <div style={{display: \"flex\", flex: \"0 0 250px\", overflowY: \"scroll\", minHeight: 0}}>\n                <StatusFilter mode={\"single\"} data={this.props.data} onFilter={this.props.onFilter.bind(this)}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    data: state.recentStatus.list,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    recent_project(project: any) {\n        dispatch({type: \"RECENT_STATUS\", payload: project});\n    },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(StatusRecentFilterContainer));\n","import {Tab, Tabs} from \"@material-ui/core\";\nimport {AccessTime, List} from \"@material-ui/icons\";\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {IMember} from \"../../../components/MemberIdFilter\";\nimport {IStatus} from \"../../../components/StatusFilter\";\nimport StatusFilterContainer from \"../../../containers/StatusFilterContainer\";\nimport StatusRecentFilterContainer from \"../../../containers/StatusRecentFilterContainer\";\n\nclass StatusFilterTabContainer extends Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            value: 1,\n        };\n    }\n\n    handleChange(event: any, value: any) {\n        this.setState({value});\n    }\n\n    render() {\n        const {value} = this.state;\n        return (\n            <div style={{display: \"flex\", flex: \"0 0 250px\", flexDirection: \"column\"}}>\n                <div style={{width: \"250px\"}}>\n                    <Tabs value={value} onChange={this.handleChange.bind(this)} fullWidth>\n                        <Tab icon={<List/>}/>\n                        <Tab icon={<AccessTime/>}/>\n                    </Tabs>\n                </div>\n                <div style={{display: \"flex\", flex: \"1 0 250px\", overflowY: \"scroll\"}}>\n                    {value === 0 && <StatusFilterContainer onFilter={(item: IStatus[]) => this.onFilter(item)}/>}\n                    {value === 1 && <StatusRecentFilterContainer onFilter={(item: IStatus[]) => this.onFilter(item)}/>}\n                </div>\n            </div>\n        );\n    }\n\n    onFilter(item: IStatus[]) {\n        this.props.recentStatus(item[0]);\n        return this.props.onFilter(item);\n    }\n}\n\nconst mapStateToProps = (state: any) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    recentStatus(item: IMember) {\n        dispatch({type: \"RECENT_STATUS\", payload: item});\n    },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusFilterTabContainer);\n","// @flow weak\nimport gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport {IGanttIssue} from \"../../../components/Gantt\";\nimport {withStyles} from \"@material-ui/core\";\nimport AgileColumnContainer from \"../../../containers/AgileColumnContainer\";\nimport {connect} from \"react-redux\";\n\nconst styles: any = {\n    card_container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflowY: \"scroll\",\n    },\n};\ntype P = {\n    projectId?: string,\n    memberId?: string,\n    statusId?: string,\n};\ntype S = {\n    issue?: any\n}\nlet query = gql`\n    query Status {\n        issue_statuses {\n            id\n            name\n        }\n    }\n`;\n\nclass IssueListContainer extends Component<P, S> {\n    static defaultProps = {};\n\n    constructor(props: P) {\n        super(props);\n        this.state = {\n            issue: null,\n        };\n\n    }\n\n    onSelect(issue: IGanttIssue) {\n        this.setState({issue});\n    }\n\n    render() {\n        const {statusId: status_id, memberId, projectId, onClickItem, selectIssueId} = this.props;\n\n        return (\n            <Query query={query}\n            >\n                {({loading, error, data}) => {\n                    if (loading) {\n                        return <p>Loading...</p>;\n                    }\n                    if (error) {\n                        return <p>Error :(</p>;\n                    }\n                    const {issue_statuses} = data;\n                    return (\n                        <div style={{width: \"100%\", height: \"100%\"}}>\n                            <div style={{width: \"100%\", height: \"100%\", overflowY: \"scroll\", display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                                {issue_statuses.map((it: { id: any; }) => <AgileColumnContainer\n                                    selectIssueId={selectIssueId}\n                                    project_id={projectId}\n                                    assigned_to_id={memberId}\n                                    status={it}\n                                    key={it.id} data={[]}\n                                    onClickItem={(item: any) => onClickItem(item)}\n                                />)}\n                            </div>\n                        </div>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default connect(({viewSelect}) => ({selectIssueId: viewSelect}))(withStyles(styles)(IssueListContainer));\n","// @flow weak\nimport gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport {IGanttIssue} from \"../../../components/Gantt\";\nimport {withStyles} from \"@material-ui/core\";\nimport IssueList from \"../../../components/IssueList\";\nimport {connect} from \"react-redux\";\n\nconst styles: any = {\n    card_container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflowY: \"scroll\",\n    },\n};\ntype P = {\n    projectId?: string,\n    memberId?: string,\n    statusId?: string,\n};\ntype S = {\n    issue?: any\n}\n\nconst query: any = gql`query Issues($assigned_to_id:String, $project_id:String) {\n    issues(assigned_to_id:$assigned_to_id,limit:500,project_id:$project_id){\n        id\n        assigned_to_name\n        subject\n        start_date\n        due_date\n        relations{\n            relation_type\n            issue_to_id\n        }\n        status{\n            id\n            name\n        }\n        project{\n            id\n            name\n        }\n    }\n} `;\n\nclass IssueListContainer extends Component<P, S> {\n    static defaultProps = {};\n\n    constructor(props: P) {\n        super(props);\n        this.state = {\n            issue: null,\n        };\n\n    }\n\n    onSelect(issue: IGanttIssue) {\n        this.setState({issue});\n    }\n\n    render() {\n        const {classes, selectIssueId, statusId, memberId, projectId, onClickItem, keyword} = this.props;\n        console.log(`selectIssueId:${selectIssueId}`);\n        return (\n            <Query query={query} variables={{assigned_to_id: memberId, project_id: projectId}}>\n                {({loading, error, data}) => {\n                    if (loading) {\n                        return <p>Loading...</p>;\n                    }\n                    if (error) {\n                        return <p>Error :(</p>;\n                    }\n                    const issues = (data.issues || [])\n                        .filter((it: { status: { id: any; }; }) => !statusId || statusId === it.status.id)\n                        .filter(it => keyword ? it.subject.indexOf(keyword) > 0 : true)\n                        .map((it: { subject: any; status: { name: any; }; }) => ({...it, subject: `${it.subject}[${it.status.name}]`}));\n                    return <div className={classes.card_container}>\n                        <IssueList data={issues} onClickItem={onClickItem} selectIssueId={selectIssueId}/>\n                    </div>;\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default connect(({viewSelect}) => ({selectIssueId: viewSelect}))(withStyles(styles)(IssueListContainer));\n","import {Tab, Tabs} from \"@material-ui/core\";\nimport {AccessTime, Close, List, Schedule, ViewColumn} from \"@material-ui/icons\";\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport MemberIdFilterContainer from \"../../../containers/MemberIdFilterContainer\";\nimport MemberIdRecentFilterContainer from \"../../../containers/MemberIdRecentFilterContainer\";\nimport {IMember} from \"../../../components/MemberIdFilter\";\nimport AgileContainer from \"./AgileContainer\";\nimport IssueListContainer from \"./IssueListContainer\";\nimport GanttContainer from \"./GanttContainer\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\ntype P = {\n    keyword?: string,\n    onClose?: (hidden: boolean)=>{}\n}\ntype S = {\n    hidden: boolean\n}\n\nclass ViewTabContainer extends Component<P, S> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            value: 0,\n            hidden: false\n        };\n    }\n\n    handleChange = (event: any, value: any) => {\n        this.setState({\n            value,\n        });\n        this.toggle(false)\n    };\n\n    handleClose = () => {\n        let hidden = !this.state.hidden;\n        this.toggle(hidden);\n    };\n\n    toggle(hidden) {\n        this.props.onClose && this.props.onClose(hidden);\n        this.setState({hidden: hidden})\n    }\n    render() {\n        const {projectId: project_id, memberId: assigned_to_id, statusId: status_id, onClickItem, keyword} = this.props;\n        const {value} = this.state;\n        return (\n            <div style={{display: \"flex\", flex: \"0 0 1\", flexDirection: \"column\"}}>\n                <div style={{width: \"100%\", display: \"flex\", flex: \"0 0 1\", flexDirection: \"row\", justifyContent: 'flex-end'}}>\n                    <Tabs value={value} onChange={this.handleChange}>\n                        <Tab icon={<List/>}/>\n                        <Tab icon={<ViewColumn/>}/>\n                        <Tab icon={<Schedule/>}/>\n                    </Tabs>\n                    <IconButton>\n                        <Close onClick={this.handleClose}/>\n                    </IconButton>\n                </div>\n                {!this.state.hidden && <div style={{display: \"flex\", flex: \"1 0 250px\", overflowY: \"scroll\"}}>\n                    <div style={{width: \"100%\", height: \"100%\", overflowX: \"scroll\"}}>\n                        {value === 0 && <IssueListContainer projectId={project_id} memberId={assigned_to_id} statusId={status_id} keyword={keyword} onClickItem={onClickItem}/>}\n                        {value === 1 && <AgileContainer projectId={project_id} memberId={assigned_to_id} statusId={status_id} keyword={keyword} onClickItem={onClickItem}/>}\n                        {value === 2 && <GanttContainer projectId={project_id} memberId={assigned_to_id} statusId={status_id} keyword={keyword} onClickItem={onClickItem}/>}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default ViewTabContainer;\n","// @flow\nimport {withStyles} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport _ from \"lodash\";\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\nexport interface IStatus {\n    id: any;\n    name?: any;\n}\n\ninterface IStatusFilterProps {\n    data: IStatus[];\n    mode?: \"single\";\n    onFilter: (keyword: string)=>{};\n    classes?: any;\n}\n\nclass KeywordFilter extends React.Component<IStatusFilterProps> {\n    state = {\n        keyword: '',\n    };\n\n    constructor(props) {\n        super(props);\n        let {onFilter} = this.props;\n        this.filter = _.debounce((keyword) => {\n            console.log(`debounce`);\n            onFilter(keyword)\n        }, 200);\n    }\n\n\n    handleChange = name => event => {\n        let keyword = event.target.value;\n        this.setState({\n            [name]: keyword,\n        });\n        this.filter(keyword)\n    };\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <TextField\n                id=\"outlined-name\"\n                label=\"Keyword\"\n                className={classes.textField}\n                value={this.state.keyword}\n                onChange={this.handleChange('keyword')}\n                margin=\"normal\"\n                variant=\"outlined\"\n            />\n        );\n    }\n}\n\nexport default withStyles(styles)(KeywordFilter);\n","// @flow\nimport {Tab, Tabs} from \"@material-ui/core\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {AccessTime, List} from \"@material-ui/icons\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport IssueList from \"../components/IssueList\";\nimport MemberIdFilterContainer from \"../containers/MemberIdFilterContainer\";\nimport ProjectIdFilterContainer from \"../containers/ProjectIdFilterContainer\";\nimport ProjectIdRecentFilterContainer from \"../containers/ProjectIdRecentFilterContainer\";\nimport StatusFilterContainer from \"../containers/StatusFilterContainer\";\nimport IssueDialog from \"./issues/components/IssueDialog\";\nimport GanttContainer from \"./issues/containers/GanttContainer\";\nimport MemberIdFilterTabContainer from \"./issues/containers/MemberIdFilterTabContainer\";\nimport ProjectIdFilterTabContainer from \"./issues/containers/ProjectIdFilterTabContainer\";\nimport StatusFilterTabContainer from \"./issues/containers/StatusFilterTabContainer\";\nimport ViewTabContainer from \"./issues/containers/ViewTabContainer\";\nimport KeywordFilter from \"../components/KeywordFilter\";\nimport {connect} from \"react-redux\";\nimport {IMember} from \"../components/MemberIdFilter\";\n\nconst styles: any = {\n    card_container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflowY: \"scroll\",\n    },\n};\n\ntype P = {}\ntype S = {}\n\nclass Issues extends Component<P, S> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            filter: {},\n            filter_project: {},\n            issue: null,\n            status: {},\n            keyword: null,\n            value: 0,\n            hidden1: false,\n        };\n    }\n\n    onProjectFilter(project: any[]) {\n        if (project && project.length) {\n            this.setState({filter_project: project[0]});\n        } else {\n            this.setState({filter_project: {}});\n        }\n        this.forceUpdate();\n    }\n\n    onFilter(user: any[]) {\n        if (user && user.length) {\n            this.setState({filter: user[0]});\n        } else {\n            this.setState({filter: {}});\n        }\n        this.forceUpdate();\n    }\n\n    onClose1 = (hidden) => {\n        this.setState({hidden1: hidden})\n    };\n    render() {\n        const {classes, select} = this.props;\n        const {value, keyword} = this.state;\n        const {id: assigned_to_id} = this.state.filter || {};\n        const {id: project_id} = this.state.filter_project || {};\n        const {id: status_id} = (this.state.status || {});\n        return (\n            <div style={{width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"row\"}}>\n                <div>\n                    <ProjectIdFilterTabContainer onFilter={(item: any[]) => this.onProjectFilter(item)}/>\n                    <MemberIdFilterTabContainer onFilter={(item: any[]) => this.onFilter(item)}/>\n                    <StatusFilterTabContainer onFilter={(item: any[]) => this.onStatusFilter(item)}/>\n                </div>\n                <div style={{flex: 1, minWidth: 0}}>\n                    <div style={{width: \"100%\", display: 'flex', flexDirection: 'row', justifyContent: 'flex-start'}}>\n                        <KeywordFilter onFilter={this.onKeywordFilter}/>\n                    </div>\n                    <div style={{width: \"100%\", height: this.state.hidden1 ? \"auto\" : \"50%\", overflowX: \"scroll\"}}>\n                        <ViewTabContainer projectId={project_id} memberId={assigned_to_id} statusId={status_id} keyword={keyword} onClickItem={this.showIssueDetail} onClose={this.onClose1}/>\n                    </div>\n                    <div style={{width: \"100%\", height: \"50%\", overflowX: \"scroll\"}}>\n                        <ViewTabContainer projectId={project_id} memberId={assigned_to_id} statusId={status_id} keyword={keyword} onClickItem={this.showIssueDetail}/>\n                    </div>\n                </div>\n                <IssueDialog ref={(dialog: IssueDialog) => this.dialog = dialog} onClose={this.onCloseDialog}/>\n            </div>\n        );\n    }\n\n    onStatusFilter(it: any[]) {\n        if (it && it.length > 0) {\n            this.setState({status: it[0]});\n        } else {\n            this.setState({status: {}});\n        }\n        this.forceUpdate();\n    }\n\n    handleChange(event: any, value: any) {\n        this.setState({value});\n    }\n\n    onKeywordFilter = (keyword: string) => {\n        console.log(`onKeywordFilter:${keyword}`);\n        this.setState({keyword})\n    };\n    showIssueDetail = (issue: any) => {\n        const {select} = this.props;\n        let {issue: selectIssue} = this.state;\n        if (selectIssue && issue && selectIssue.id === issue.id) {\n            if (this.dialog) {\n                this.dialog.show(issue);\n            }\n        } else {\n            select(issue.id);\n            this.setState({issue: issue})\n        }\n\n    };\n    onCloseDialog = () => {\n        this.setState({issue: null})\n    }\n}\n\nlet mapStateToProps = () => ({});\nlet mapDispatchToProps = (dispatch) => ({\n    select(issueId?: string) {\n        dispatch({type: \"SELECT\", payload: issueId});\n    },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Issues));\n","import Button from \"@material-ui/core/Button\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport React, {Component} from \"react\";\nimport auth from \"../auth\";\n\nconst styles: any = (theme: { spacing: { unit: any; }; }) => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    input: {\n        display: \"none\",\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n});\n\nclass Login extends Component<any, any> {\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n        this.state = {\n            api_host: \"\",\n            api_key: \"\",\n        };\n    }\n\n    handleChange = (name: any) => (event: { target: { value: any; }; }) => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    }\n    handleTap = (event: any) => {\n        const {api_host, api_key} = this.state;\n        auth.authenticate(api_host, api_key);\n        this.setState({t: \"t\"});\n    }\n\n    componentDidMount() {\n        const {api_host, api_key} = auth.getAuth();\n        this.setState({api_host});\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div style={{display: \"flex\", flexDirection: \"column\", width: \"100%\", alignItems: \"start\"}}>\n                <TextField\n                    label=\"api_host\"\n                    className={classes.textField}\n                    style={{width: \"100%\"}}\n                    onChange={this.handleChange(\"api_host\")}\n                    margin=\"normal\"\n                    value={this.state.api_host}\n                />\n                <TextField\n                    label=\"api_key\"\n                    margin=\"normal\"\n                    value={this.state.api_key}\n                    className={classes.textField}\n                    style={{width: \"100%\"}}\n                    onChange={this.handleChange(\"api_key\")}/>\n                <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.handleTap}>\n                    Login\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Login);\n","import React, {Component} from \"react\";\nimport auth from \"../auth\";\n\nclass Logout extends Component {\n    componentDidMount() {\n        auth.signout();\n    }\n\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default Logout;\n","import {Button} from \"@material-ui/core\";\nimport React from \"react\";\nexport class LinkButton extends React.Component<any, any> {\n    render() {\n        return <Button {...this.props} {...{to: this.props.to} }/>;\n    }\n}\n","import React from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport auth from \"../auth\";\n\nclass PrivateRoute extends React.Component<any> {\n    render() {\n        const {component, ...rest} = this.props;\n        const Component: any = component;\n        return <Route {...rest} render={(props: any) => auth.isAuthenticated() ? <Component {...props} /> : <Redirect to={{pathname: \"/login\", state: {from: props.location}}}/>}/>;\n    }\n}\n\nexport default PrivateRoute;\n","import {withStyles} from \"@material-ui/core/styles\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport {Query} from \"react-apollo\";\nimport MemberIdFilter from \"../components/MemberIdFilter\";\n\nconst styles: any = (theme: { palette: { background: { paper: any; }; }; }) => ({\n    root: {\n        width: \"100%\",\n        maxWidth: 200,\n        backgroundColor: theme.palette.background.paper,\n        overflowY: \"scroll\",\n    },\n    listItem: {},\n});\n\nlet query = gql`query Status ($projectId:String!){\n    projects(id:$projectId){\n        memberships{\n            user {\n                id\n                name:firstname\n                mail\n            }\n        }\n\n    }\n} `;\n\nclass ProjectMemberIdFilterContainer extends React.Component<any> {\n\n    render() {\n        const {projectId} = this.props;\n\n        return (\n            <div style={{display: \"flex\", flex: \"0 0 250px\", overflowY: \"scroll\", minHeight: 0}}>\n                <Query query={query} variables={{projectId}}>\n                    {({loading, error, data}) => {\n                        if (loading) {\n                            return <p>Loading...</p>;\n                        }\n                        if (error) {\n                            return <p>Error :(</p>;\n                        }\n                        const {projects} = data;\n\n                        let project = {memberships: []};\n                        if (projects && projects.length > 0) {\n                            project = projects[0];\n                        }\n                        const users = ((project.memberships || [])).filter((it) => !!it.user && !!it.user.id).map((it) => it.user);\n                        return (\n                            <MemberIdFilter mode={\"single\"} data={users || []} onFilter={this.props.onFilter.bind(this)}/>\n                        );\n                    }}\n                </Query>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProjectMemberIdFilterContainer);\n","import {withStyles} from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport AgileColumn from \"../containers/AgileColumnContainer\";\nimport ProjectMemberIdFilterContainer from \"../containers/ProjectMemberIdFilterContainer\";\nimport IssueDialog from \"./issues/components/IssueDialog\";\n\nconst styles: any = {\n    appBar: {\n        position: \"relative\",\n    },\n    flex: {\n        flex: 1,\n    },\n};\nclass ProjectAgile extends Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            filter: \"\",\n            issue: null,\n        };\n    }\n\n    onFilter(user: Array<{ id: any; }>) {\n        if (user && user.length) {\n            this.setState({filter: user[0].id});\n        } else {\n            this.setState({filter: null});\n        }\n    }\n\n    render() {\n        const {match: {params: {projectId}}} = this.props;\n        return (\n            <div style={{flex: 1, display: \"flex\"}}>\n                <div style={{width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"row\"}}>\n                    <div style={{display: \"flex\", flex: \"0 0 250px\", overflowY: \"scroll\"}}>\n                        <ProjectMemberIdFilterContainer projectId={projectId} onFilter={(item: Array<{ id: any; }>) => this.onFilter(item)}/>\n                    </div>\n                    <div style={{flex: 1, minWidth: 0}}>\n                        <div style={{width: \"100%\", height: \"100%\", overflowX: \"scroll\"}}>\n                            <Query query={gql`\n          query Status {\n            issue_statuses {\n              id\n              name\n            }\n          }\n        `}\n                            >\n                                {({loading, error, data}) => {\n                                    if (loading) {\n                                        return <p>Loading...</p>;\n                                    }\n                                    if (error) {\n                                        return <p>Error :(</p>;\n                                    }\n                                    const {issue_statuses} = data;\n                                    return (\n                                        <div style={{width: \"100%\", height: \"100%\"}}>\n                                            <div style={{width: \"100%\", height: \"100%\", overflowY: \"scroll\", display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                                                {issue_statuses.map((it: { id: any; }) => <AgileColumn\n                                                    project_id={projectId}\n                                                    assigned_to_id={this.state.filter}\n                                                    status={it}\n                                                    key={it.id} data={[]}\n                                                    onClickItem={(item: any) => this.setState({issue: item})}\n                                                />)}\n                                            </div>\n                                        </div>\n                                    );\n                                }}\n                            </Query>\n                        </div>\n                    </div>\n                </div>\n                <IssueDialog data={this.state.issue}/>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProjectAgile);\n","import gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport Gantt, {IGanttIssue} from \"../components/Gantt\";\nimport Issue from \"../components/Issue\";\nimport ProjectMemberIdFilterContainer from \"../containers/ProjectMemberIdFilterContainer\";\n\nconst query = gql`query ProjectGantt($id: String!,$assigned_to_id:String) {\n    projects(id:$id,limit:1000) {\n        id\n        name\n        description\n        issues(assigned_to_id:$assigned_to_id){\n            id\n            assigned_to_name\n            subject\n            start_date\n            due_date\n            relations{\n                relation_type\n                issue_to_id\n            }\n        }\n    }\n}`;\n\nclass ProjectGantt extends Component<any, any> {\n    issues: any[] = [];\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            data: [],\n            filter: [],\n            issue: {},\n            issues: [],\n        };\n    }\n\n    render() {\n        const {match: {params: {projectId}}} = this.props;\n\n        return (\n            <div style={{flex: 1, display: \"flex\"}}>\n                <div style={{flex: 1, display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n                    <ProjectMemberIdFilterContainer projectId={projectId} onFilter={(it: any) => this.onFilter(it)}/>\n                    <Query query={query} variables={{id: projectId, assigned_to_id: (this.state.filter || {}).id}}>\n                        {({loading, error, data}) => {\n                            if (loading) {\n                                return <p>Loading...</p>;\n                            }\n                            if (error) {\n                                return <p>Error :(</p>;\n                            }\n                            const {issues} = data.projects[0];\n                            this.issues = issues;\n                            return <div style={{height: \"100%\", width: \"100%\", overflowY: \"scroll\"}}>\n                                <Gantt data={issues} onSelect={(i: IGanttIssue) => this.onSelect(i)}/>\n                            </div>;\n                        }}\n                    </Query>\n                    <Issue data={this.state.issue} issues={this.state.issues}/>\n                </div>\n            </div>\n        );\n    }\n\n    onSelect(issue: IGanttIssue) {\n        this.setState({\n            issue,\n            issues: this.issues,\n        });\n    }\n\n    onFilter(it: any[]) {\n        if (it && it.length > 0) {\n            this.setState({filter: it[0]});\n        } else {\n            this.setState({filter: null});\n        }\n        this.forceUpdate();\n    }\n}\n\nexport default ProjectGantt;\n","import {withStyles} from \"@material-ui/core\";\nimport gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport Gantt, {IGanttIssue} from \"../components/Gantt\";\nimport AgileColumn from \"../containers/AgileColumnContainer\";\nimport ProjectMemberIdFilterContainer from \"../containers/ProjectMemberIdFilterContainer\";\nimport IssueDialog from \"./issues/components/IssueDialog\";\n\nconst styles: any = {\n    appBar: {\n        position: \"relative\",\n    },\n    flex: {\n        flex: 1,\n    },\n};\nconst query = gql`query ProjectHomeGantt($id: String!,$assigned_to_id:String) {\n    projects(id:$id,limit:1000) {\n        id\n        name\n        description\n        issues(assigned_to_id:$assigned_to_id){\n            id\n            assigned_to_name\n            subject\n            start_date\n            due_date\n            relations{\n                relation_type\n                issue_to_id\n            }\n        }\n    }\n}`;\n\nclass ProjectHome extends Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            filter: \"\",\n            issue: null,\n        };\n\n    }\n    onFilter(user: Array<{ id: any; }>) {\n        if (user && user.length) {\n            this.setState({filter: user[0].id});\n        } else {\n            this.setState({filter: null});\n        }\n    }\n\n    onSelect(issue: IGanttIssue) {\n        this.setState({issue});\n    }\n\n    render() {\n        const {match: {params: {projectId}}} = this.props;\n\n        return (\n            <div style={{flex: 1, display: \"flex\"}}>\n                <div style={{width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"row\"}}>\n                    <div style={{display: \"flex\", flex: \"0 0 250px\", overflowY: \"scroll\"}}>\n                        <ProjectMemberIdFilterContainer projectId={projectId} onFilter={(item: Array<{ id: any; }>) => this.onFilter(item)}/>\n                    </div>\n                    <div style={{flex: 1, minWidth: 0}}>\n                        <div style={{width: \"100%\", height: \"50%\", overflowX: \"scroll\"}}>\n                            <Query query={query} variables={{id: projectId, assigned_to_id: this.state.filter}}>\n                                {({loading, error, data}) => {\n                                    if (loading) {\n                                        return <p>Loading...</p>;\n                                    }\n                                    if (error) {\n                                        return <p>Error :(</p>;\n                                    }\n                                    const {issues} = data.projects[0];\n                                    return <Gantt data={issues} onSelect={(i) => this.onSelect(i)}/>;\n                                }}\n                            </Query>\n                        </div>\n                        <div style={{width: \"100%\", height: \"50%\", overflowX: \"scroll\"}}>\n                            <Query query={gql`query Status {\n    issue_statuses {\n        id\n        name\n    }\n}\n                        `}\n                            >\n                                {({loading, error, data}) => {\n                                    if (loading) {\n                                        return <p>Loading...</p>;\n                                    }\n                                    if (error) {\n                                        return <p>Error :(</p>;\n                                    }\n                                    const {issue_statuses} = data;\n                                    return (\n                                        <div style={{width: \"100%\", height: \"100%\"}}>\n                                            <div style={{width: \"100%\", height: \"100%\", overflowY: \"scroll\", display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\n                                                {issue_statuses.map((it: { id: any; }) => <AgileColumn project_id={projectId} assigned_to_id={this.state.filter} status={it} key={it.id} data={[]} onClickItem={(item: any) => this.setState({issue: item})}\n                                                />)}\n                                            </div>\n                                        </div>\n                                    );\n                                }}\n                            </Query>\n                        </div>\n                    </div>\n                </div>\n                <IssueDialog data={this.state.issue}/>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ProjectHome);\n","import gql from \"graphql-tag\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport {Link} from \"react-router-dom\";\nimport {LinkButton} from \"../components/LinkButton\";\nimport PrivateRoute from \"../router/PrivateRoute\";\nimport ProjectAgile from \"./ProjectAgile\";\nimport ProjectGantt from \"./ProjectGantt\";\nimport ProjectHome from \"./ProjectHome\";\n\nconst query = gql`query Project($id: String!) {\n    projects(id:$id) {\n        id\n        name\n        description\n    }\n}\n`;\n\nclass Project extends Component<any, any> {\n    render() {\n        const {match} = this.props;\n        const projectId = match.params.projectId;\n        return <div style={{height: \"100%\", minHeight: 0, display: \"flex\", flexDirection: \"column\"}}>\n            <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"start\", alignItems: \"center\"}}>\n                <Query query={query} variables={{id: projectId}}>\n                    {({loading, error, data}) => {\n                        if (loading) {\n                            return <p>Loading...</p>;\n                        }\n                        if (error) {\n                            return <p>Error :(</p>;\n                        }\n                        const {id, name, description}: { id: any, name: any, description: any } = (data.projects || [])[0] || {};\n                        return (<h1 title={description}>{id}:{name}</h1>);\n                    }}\n                </Query>\n                <div>\n                    <LinkButton size=\"small\" component={Link} to={`/project/${projectId}/home`}>Home</LinkButton>\n                    <LinkButton size=\"small\" component={Link} to={`/project/${projectId}/gantt`}>Gantt</LinkButton>\n                    <LinkButton size=\"small\" component={Link} to={`/project/${projectId}/agile`}>Agile</LinkButton>\n                </div>\n            </div>\n            <PrivateRoute path=\"/project/:projectId/home\" match={match} component={ProjectHome}/>\n            <PrivateRoute path=\"/project/:projectId/gantt\" match={match} component={ProjectGantt}/>\n            <PrivateRoute path=\"/project/:projectId/agile\" match={match} component={ProjectAgile}/>\n        </div>;\n    }\n}\n\nexport default Project;\n","import {withStyles} from \"@material-ui/core\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"../../node_modules/@material-ui/core/Button/Button\";\nimport Card from \"../../node_modules/@material-ui/core/Card/Card\";\nimport CardActions from \"../../node_modules/@material-ui/core/CardActions/CardActions\";\nimport CardContent from \"../../node_modules/@material-ui/core/CardContent/CardContent\";\nimport Typography from \"../../node_modules/@material-ui/core/Typography/Typography\";\n\nconst styles: any = {\n    card_container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflowY: \"scroll\",\n        minHeight: 0,\n        height: \"100%\",\n    },\n    card: {\n        width: 300,\n        margin: 10,\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    title: {\n        marginBottom: 16,\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n};\n\nconst ProjectCardList = (props: { classes?: any; data: any; }) => {\n    const {classes, data: projects} = props;\n    return <div className={classes.card_container}>\n        {projects.map((project: { id: any, name: any, description: any }) => (\n            <Card key={project.id} className={classes.card}>\n                <CardContent>\n                    <Typography variant=\"headline\" component=\"h2\">\n                        {project.id}:{project.name}\n                    </Typography>\n                    <Typography component=\"p\">\n                        {project.description}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" component={Link} {...{to: `/project/${project.id}`} }>Detail</Button>\n                    <Button size=\"small\" component={Link} {...{to: `/project/${project.id}/gantt`} } >Gantt</Button>\n                    <Button size=\"small\" component={Link} {...{to: `/project/${project.id}/agile`} }>Agile</Button>\n                </CardActions>\n            </Card>\n        ))}\n    </div>;\n};\nexport default withStyles(styles)(ProjectCardList);\n","import {withStyles} from \"@material-ui/core\";\nimport ListItemSecondaryAction from \"@material-ui/core/es/ListItemSecondaryAction/ListItemSecondaryAction\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"../../node_modules/@material-ui/core/Button/Button\";\n\nconst styles: StyleRules<string> = {\n    card_container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflowY: \"scroll\",\n        minHeight: 0,\n        height: \"100%\",\n    },\n    card: {\n        width: 300,\n        margin: 10,\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    title: {\n        marginBottom: 16,\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n};\n\nconst ProjectCardList = (props: { classes?: any; data: any; }) => {\n    const {classes, data: projects} = props;\n    return <div className={classes.card_container}>\n        <List component=\"nav\">\n            {projects.map(({id, name, description}: { id: any, name: any, description: any }) => (\n                <ListItem key={id} button>\n                    <ListItemText primary={`${id}:${name}`} secondary={`${description}`}/>\n                    <ListItemSecondaryAction>\n                        <Button size=\"small\" component={Link} {...{to: `/project/${id}`} }>Detail</Button>\n                        <Button size=\"small\" component={Link} {...{to: `/project/${id}/gantt`} }>Gantt</Button>\n                        <Button size=\"small\" component={Link} {...{to: `/project/${id}/agile`} }>Agile</Button>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            ))}\n        </List>\n    </div>;\n};\nexport default withStyles(styles)(ProjectCardList);\n","import Button from \"@material-ui/core/es/Button/Button\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport gql from \"graphql-tag\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, {Component} from \"react\";\nimport {Query} from \"react-apollo\";\nimport ProjectCardList from \"../components/ProjectCardList\";\nimport ProjectList from \"../components/ProjectList\";\n\nconst styles: any = {\n    card_container: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        overflowY: \"scroll\",\n    },\n    card: {\n        width: 300,\n        margin: 10,\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    title: {\n        marginBottom: 16,\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n};\n\nclass Projects extends Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            mode: \"list\",\n        };\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div style={{height: \"100%\", minHeight: 0, display: \"flex\", flexDirection: \"column\"}}>\n                <div style={{display: \"flex\", flexDirection: \"row\"}}>\n                    <Button variant=\"contained\" color={this.state.mode === \"list\" ? \"primary\" : \"default\"} onClick={(event) => this.setState({mode: \"list\"})}>\n                        List\n                    </Button>\n                    <Button variant=\"contained\" color={this.state.mode === \"grid\" ? \"primary\" : \"default\"} onClick={(event) => this.setState({mode: \"grid\"})}>\n                        Grid\n                    </Button>\n                </div>\n                <Query query={gql`\n          {\n            projects {\n              id\n              name\n              description\n            }\n          }\n        `}\n                >\n                    {({loading, error, data}) => {\n                        if (loading) {\n                            return <p>Loading...</p>;\n                        }\n                        if (error) {\n                            return <p>Error :(</p>;\n                        }\n                        const projects = _.orderBy(data.projects || [], [\"id\"]);\n                        return this.state.mode === \"grid\" ? <ProjectCardList data={projects}/> : <ProjectList data={projects}/>;\n                    }}\n                </Query>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Projects);\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport React, {Component} from \"react\";\nimport {HashRouter as Router, Link, Route} from \"react-router-dom\";\nimport \"./App.css\";\nimport auth from \"./auth\";\nimport About from \"./pages/About\";\nimport Agile from \"./pages/Agile\";\nimport Gantt from \"./pages/Gantt\";\nimport Home from \"./pages/Home\";\nimport Issue from \"./pages/Issue\";\nimport Issues from \"./pages/Issues\";\nimport Login from \"./pages/Login\";\nimport Logout from \"./pages/Logout\";\nimport Project from \"./pages/Project\";\nimport Projects from \"./pages/Projects\";\nimport PrivateRoute from \"./router/PrivateRoute\";\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    // tslint:disable-next-line:object-literal-sort-keys\n    flex: {},\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n};\n\nclass App extends Component<any, any> {\n    componentDidMount(): void {\n        console.log(process.env);\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Router>\n                <div className=\"App\">\n                    <AppBar position=\"static\">\n                        <Toolbar>\n                            <Typography variant=\"title\" color=\"inherit\" className={classes.flex}>\n                                xRedmine\n                            </Typography>\n                            <ul style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", flex: 1}}>\n                                <li><Link to=\"/\">Issues</Link></li>\n                                <li><Link to=\"/projects\">Projects</Link></li>\n                                <li><Link to=\"/gantt\">Gantt</Link></li>\n                                <li><Link to=\"/agile\">Agile</Link></li>\n                            </ul>\n                            {auth.isAuthenticated() ? <Button color=\"inherit\" component={Link} {...{to: \"/logout\"}} >Logout</Button> : <Button color=\"inherit\" component={Link} {...{to: \"/login\"}}>Login</Button>}\n                        </Toolbar>\n                    </AppBar>\n                    <div style={{flex: 1, minHeight: 0, display: \"flex\", flexDirection: \"column\"}}>\n                        <Route exact path=\"/\" component={Issues}/>\n\n                        <PrivateRoute path=\"/projects\" component={Projects}/>\n                        <PrivateRoute path=\"/issue/:id\" component={Issue}/>\n                        <PrivateRoute path=\"/gantt\" component={Gantt}/>\n                        <PrivateRoute path=\"/agile\" component={Agile}/>\n                        <PrivateRoute path=\"/project/:projectId\" component={Project}/>\n\n                        <Route path=\"/login\" component={Login}/>\n                        <Route path=\"/logout\" component={Logout}/>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\n// App.propTypes = {\n//     classes: PropTypes.object.isRequired,\n// };\n\nexport default withStyles(styles)(App);\n","import _ from \"lodash\";\nimport {Action, combineReducers, createStore} from \"redux\";\nimport {devToolsEnhancer} from \"redux-devtools-extension\";\nimport {IMember} from \"../components/MemberIdFilter\";\nimport {IProject} from \"../components/ProjectIdFilter\";\nimport {IStatus} from \"../components/StatusFilter\";\nimport {loadState, saveState} from \"./localStorage\";\n\nfunction recentProject(state: any, action: { type: string, payload: IProject }) {\n    switch (action.type) {\n        case \"RECENT_PROJECT\":\n            if (!action.payload) return state;\n            return {\n                ...state,\n                recent_project_list: [action.payload, ..._.filter(state.recent_project_list, (it) => it.id !== action.payload.id)].slice(0, 5),\n            };\n        default:\n            return state || {recent_project_list: []};\n    }\n}\n\nfunction recentMember(state: any, action: { type: string, payload: IMember }) {\n    switch (action.type) {\n        case \"RECENT_MEMBER\":\n            if (!action.payload) return state;\n            return {\n                ...state,\n                list: [action.payload, ..._.filter(state.list, (it) => it.id !== action.payload.id)].slice(0, 5),\n            };\n        default:\n            return state || {list: []};\n    }\n}\n\nfunction recentStatus(state: any, action: { type: string, payload: IStatus }) {\n    switch (action.type) {\n        case \"RECENT_STATUS\":\n            if (!action.payload) return state;\n            return {\n                ...state,\n                list: [action.payload, ..._.filter(state.list, (it) => it.id !== action.payload.id)].slice(0, 5),\n            };\n        default:\n            return state || {list: []};\n    }\n}\n\nfunction viewSelect(state: any, action: { type: string, payload: any }) {\n    switch (action.type) {\n        case \"SELECT\":\n            return action.payload || null;\n        default:\n            return state || null;\n    }\n}\nconst reducers = combineReducers({\n    recentMember,\n    recentProject,\n    recentStatus,\n    viewSelect,\n    // apollo: client.reducer(),\n});\nconst persistedState = loadState();\n// const preloadedState: any = {\n//     recentProject: {recent_project_list: []},\n// };\n// let enhancer = compose(applyMiddleware(client.middleware()),\n// 如果你正在使用开发者工具扩展程序，你可以在这里添加如下代码\n// (typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined') ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n// );\nconst enhancer = devToolsEnhancer({});\nconst store = createStore(reducers, persistedState, enhancer);\nstore.subscribe(() => saveState(store.getState()));\nexport default store;\n","export const loadState = () => {\n    try {\n        const serializedState: any = localStorage.getItem(\"store\");\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\nexport const saveState = (state: any) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(\"store\", serializedState);\n    } catch {\n        // ignore write errors\n    }\n};\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport {ApolloProvider} from \"react-apollo\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport \"typeface-roboto\";\nimport client from \"./apollo/client\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nconst app = (\n    <ApolloProvider store={store} client={client}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </ApolloProvider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}